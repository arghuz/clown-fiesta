package conversor;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 2840481921044
 */
public class NewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     */
    public NewJPanel() {
        initComponents();
        int i = 0;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtBin = new javax.swing.JTextField();
        txtdec = new javax.swing.JTextField();
        binario = new javax.swing.JButton();
        decimal = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        txthexa = new javax.swing.JTextField();
        hexadecimal = new javax.swing.JButton();

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setText("Conversor");

        txtBin.setEditable(false);

        txtdec.setEditable(false);

        binario.setText(" Decimal para Binario");
        binario.setEnabled(false);
        binario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                binarioActionPerformed(evt);
            }
        });

        decimal.setText("Binario para Decimal");
        decimal.setEnabled(false);
        decimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decimalActionPerformed(evt);
            }
        });

        jLabel2.setText("Decimal");

        jLabel3.setText("Binario");

        jCheckBox1.setText("Decimal -> Binario/Hexadecimal");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Binario -> Decimal/Hexadecimal");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Arthur Gonzaga da Silva, feito em Java (Netbeans)");

        jCheckBox3.setText("Hexadecimal -> Binario/Decimal");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jLabel6.setText("Hexadecimal");

        txthexa.setEditable(false);

        hexadecimal.setText("Hexadecimal para Decimal");
        hexadecimal.setEnabled(false);
        hexadecimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hexadecimalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(hexadecimal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txthexa, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(binario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(decimal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtdec)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtBin, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jLabel5)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(4, 4, 4)
                .addComponent(txtBin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtdec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(txthexa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(binario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(decimal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hexadecimal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void binarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_binarioActionPerformed
        /*
        int num = Integer.parseInt(txtBin.getText());
        txtdec.setText(Integer.toString(num, 2));
        int num = Integer.parseInt(txtBin.getText());
        txthexa.setText(Integer.toHexString(num));
        */
        
            String entrada = "";
            int decimal = Integer.parseInt(txtBin.getText());
            boolean k = true;
            while (k){
                int resto = decimal % 2;
                decimal = decimal/2;
                entrada= Integer.toString(resto)+entrada;
                if (decimal == 0)
                    k=false;
            }
        txtdec.setText(entrada);
              
        int hexa = Integer.parseInt(txtBin.getText());
        String hex = "";
        int num1;
        char hexchars[]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};  
        while(hexa>0){  
            num1=hexa%16;   
            hex=hexchars[num1]+hex;   
            hexa=hexa/16;  
     } 
         txthexa.setText(hex);
        
        
    }//GEN-LAST:event_binarioActionPerformed

    private void decimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decimalActionPerformed
        /*int num = Integer.parseInt(txtdec.getText());
        String bin=(txtdec.getText());
        txtBin.setText(String.valueOf(Integer.parseInt(bin, 2)));
        int num = decimal;
        txthexa.setText(Integer.toHexString(num));
        */
        String entrada = txtdec.getText();
        int potencia =0;
        int decimal =0;
        for(int i = entrada.length()-1; i>=0; i--){
            decimal += Math.pow(2, potencia)*Character.getNumericValue(entrada.charAt(i));
            potencia ++;
        }
        txtBin.setText(Integer.toString(decimal));
        
        int hexa =(decimal);
        String hex = "";
        int num1;
        char hexchars[]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};  
        while(hexa>0){  
            num1=hexa%16;   
            hex=hexchars[num1]+hex;   
            hexa=hexa/16;  
     } 
         txthexa.setText(hex);
        
        
        
    }//GEN-LAST:event_decimalActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed

        if ("".equals(jLabel4.getText())){
                txtBin.setEditable(true);
                binario.setEnabled(true);
                jLabel4.setText("de Binario");
                jCheckBox2.setEnabled(false);
                jCheckBox3.setEnabled(false);
        }else if ("de Binario".equals(jLabel4.getText())){
            txtdec.setText("");
            txtBin.setText("");
            txthexa.setText("");
            txtBin.setEditable(false);
            binario.setEnabled(false);
            jLabel4.setText("");
            jCheckBox2.setEnabled(true);
            jCheckBox3.setEnabled(true);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        
        if ("".equals(jLabel4.getText())){
                txtdec.setEditable(true);
                decimal.setEnabled(true);
                jLabel4.setText("de Decimal");
                jCheckBox1.setEnabled(false);
                jCheckBox3.setEnabled(false);
        }else if ("de Decimal".equals(jLabel4.getText())){
            txtdec.setText("");
            txtBin.setText("");
            txthexa.setText("");
            txtdec.setEditable(false);
            decimal.setEnabled(false);
            jLabel4.setText("");
            jCheckBox1.setEnabled(true);
            jCheckBox3.setEnabled(true);
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
       if ("".equals(jLabel4.getText())){
                txthexa.setEditable(true);
                hexadecimal.setEnabled(true);
                jLabel4.setText("de Hexdecimal");
                jCheckBox2.setEnabled(false);
                jCheckBox1.setEnabled(false);
        }else if ("de Hexdecimal".equals(jLabel4.getText())){
            txtdec.setEditable(false);
            txtdec.setText("");
            txtBin.setText("");
            txthexa.setText("");
            decimal.setEnabled(false);
            jLabel4.setText("");
            jCheckBox1.setEnabled(true);
            jCheckBox2.setEnabled(true);
        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void hexadecimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hexadecimalActionPerformed
     //char hexchars[]={'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};  
     String valor = ""; 
     String hexa = txthexa.getText();
     int cont = hexa.length();
     int result = 0;
     for(int i = 0; i < hexa.length();i++){
     //while(cont==hexa.length()){ 
            switch (hexa.charAt(i)){
                case 'A':
                    result +=(10 * Math.pow(16,--cont)); 
                    break;
                case 'B':
                    result +=(11 * Math.pow(16,--cont)); 
                    break;
                
                case 'C':
                    result +=(12 * Math.pow(16,--cont)); 
                    break;
               case 'D':
                    result +=(13 * Math.pow(16,--cont)); 
                    break;
                 
                case 'E':
                    result +=(14 * Math.pow(16,--cont)); 
                    break;
                    
                case 'F':
                    result +=(15 * Math.pow(16,--cont)); 
                    break;
                
                
                
                
                
                case '1':
                    result +=(1 * Math.pow(16,--cont)); 
                    break;
                case '2':
                    result +=(2 * Math.pow(16,--cont)); 
                    break;
                case '3':
                    result +=(3 * Math.pow(16,--cont)); 
                    break;
                case '4':
                    result +=(4 * Math.pow(16,--cont)); 
                    break;
                case '5':
                    result +=(5 * Math.pow(16,--cont)); 
                    break;  
                 case '6':
                    result +=(6 * Math.pow(16,--cont)); 
                    break;
                case '7':
                    result +=(7 * Math.pow(16,--cont)); 
                    break;
                    
                 case '8':
                    result +=(8 * Math.pow(16,--cont)); 
                    break;
                 case '9':
                    result +=(9 * Math.pow(16,--cont)); 
                    break;
            }
         
     }
    txtBin.setText(String.valueOf(result));
    String entrada = "";
    
            boolean k = true;
            while (k){
                int resto = result% 2;
                result = result/2;
                entrada= Integer.toString(resto)+entrada;
                if (result == 0)
                    k=false;
            }
        txtdec.setText(entrada);
        
        
       /*  boolean k = true;
            while (k){
                int resto = hexa % 16;
                hexa = hexa/16;
                if (hexa >=10){
                    switch (hexa){
                case 10:
                    valor=valor+"A";
                    break;
                case 11:
                    valor=valor+"B";
                    break;
                case 12:
                    valor=valor+"C";
                    break;
                case 13:
                    valor=valor+"D";
                    break;
                case 14:
                    valor=valor+"E";
                    break;
                case 15:
                    valor=valor+"F";
                    break;
        }
                }else {
                    valor=valor+Integer.toString(hexa);
                    k=false;
                }
                    
            }    
            */
         
        
    }//GEN-LAST:event_hexadecimalActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton binario;
    private javax.swing.JButton decimal;
    private javax.swing.JButton hexadecimal;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtBin;
    private javax.swing.JTextField txtdec;
    private javax.swing.JTextField txthexa;
    // End of variables declaration//GEN-END:variables
}
